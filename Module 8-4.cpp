/*Задание 4. Убийца Steam
Что нужно сделать
Вы пишете программу-инсталлятор для компьютерной игры. Пока обновление скачивается, пользователю нужно показать прогресс загрузки, чтобы он мог решить, подождать ему у экрана компьютера или заварить чай.

Напишите программу, принимающую на вход размер файла обновления в мегабайтах и скорость интернет-соединения в мегабайтах в секунду.
В каждую секунду программа показывает, сколько процентов от общего объёма обновления уже скачано, до тех пор, пока файл не загрузится. 
После установки обновления программа выводит время в секундах, которое заняло скачивание. Обеспечьте контроль ввода.

Пример выполнения

Ввод:

Укажите размер файла для скачивания: 123

Какова скорость вашего соединения? 27

Вывод:

Прошло 1 сек. Скачано 27 из 123 МБ (21%).

Прошло 2 сек. Скачано 54 из 123 МБ (43%).

Прошло 3 сек. Скачано 81 из 123 МБ (65%).

Прошло 4 сек. Скачано 108 из 123 МБ (87%).

Прошло 5 сек. Скачано 123 из 123 МБ (100%).

Рекомендации по выполнению
Обратите внимание, что проценты это целые числа.

Что оценивается
Программа работает корректно с любыми заданными значениями.
Количество процентов не вводит в заблуждение пользователя. Например, не должно выводиться 100%, если файл ещё не загрузился.*/
#include <cmath>
#include <iostream>
#include <Windows.h>

int main() {

    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);

    std::cout << "Укажите размер файла для скачивания: ";
    float fileSize;
    std::cin >> fileSize;
    while (fileSize <= 0) {
        std::cout << "Рзамер должен быть больше или равен 0 МБ. Введите снова: ";
        std::cin >> fileSize;
    }

    std::cout << "Какова скорость вашего соединения? ";
    float connectSpeed;
    std::cin >> connectSpeed;
    while (connectSpeed <= 0) {
        std::cout << "Скорость соединения может быть больше или равна 0 МБ/с. Введите снова: ";
        std::cin >> connectSpeed;
    }
    
    float downloadSize = 0.0f;
    int downloadPercent = 0;
    int elapsedTime = 0;


    while ((fileSize - downloadSize) > connectSpeed) {
        elapsedTime++;
        downloadSize += connectSpeed;
        downloadPercent = (int)((downloadSize / fileSize) * 100);
        std::cout << "Прошло " << elapsedTime << " сек. Скачано " << downloadSize << " из " << fileSize << " МБ(" << downloadPercent << "%)." << std::endl;
    }
    std::cout << "Прошло " << ++elapsedTime << " сек. Скачано " << fileSize << " из " << fileSize << " МБ(100%)." << std::endl;

}